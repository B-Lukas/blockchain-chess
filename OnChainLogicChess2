pragma solidity ^0.4.2;

//import "https://github.com/ethereum/dapp-bin/blob/master/library/stringUtils.sol";

contract Figures{
    
string[] Moves;
int[64] currentBoarduint;


int[64]standardBoard;

function startGame() public returns(int[64]){ //800k Gas to initialize Game
    
    standardBoard = [5,4,3,2,1,3,4,5,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,int(-6),int(-6),int(-6),int(-6),int(-6),int(-6),int(-6),int(-6),int(-5),int(-4),int(-3),int(-2),int(-1),int(-3),int(-4),int(-5)];

    /*
    1 = WKing
    2 = WQuenn
    3 = WBishop
    4 = WKnight
    5 = WRook
    6 = WPawn
    
    0 = empty
    
    -1 = BKing
    -2 = BQuenn
    -3 = BBishop
    -4 = BKnight
    -5 = BRook
    -6 = BPawn
*/
    return standardBoard;
}

//TODO Alles Postionen des Schachfeldes nur noch als Index?

function isPathClear(int _figure, int _startPos, int _endPos, int _movePattern) public returns(bool){

/*  _movePattern
        8 = forward
        7 = skewed left             -> Bug, keine Feldgrenzen!
        9 = skewed right
*/
    bool clear = true;
    int i;
    
    // Extra fuer WeißerBauer, wenn er sich bewegt
    if(_figure == 6 && _movePattern == 8){
        for(i = _startPos + _movePattern;i <= _endPos; i = i + _movePattern){
        
            if(standardBoard[uint(i)] > 0 || standardBoard[uint(i)] < 0 ){
                clear = false;
            }
        }
        return clear;
    }
    // Extra fuer WeißerBauer, wenn er schlägt
    if(_figure == 6 && _movePattern == 7 || _movePattern == 9){
            if(standardBoard[uint(_endPos)] == 0 || standardBoard[uint(_endPos)] > 0 ){
                clear = false;
            }
        return clear;
    }
    //Extra für WeißerBauer, wenn er 2 Schritte macht von seiner Startposition
    if(_figure == 6 && _endPos - _startPos == 16){
        //Wenn das Feld vor dem Bauern und das Zielfeld frei sind: true
       if(standardBoard[uint(_startPos + _movePattern)] == 0 && standardBoard[uint(_endPos)] == 0){
           return clear;
       }
       else{
           return false;
       }
    }
}

function legitMove(int _figure, int _oldIndex, int _newIndex)  public returns(bool){
    
    if(_figure == 6){       //Weißer Bauer
        
        int mathMove = _newIndex - _oldIndex; //TODO: Modulo!
        
        //Forwaertz TODO: 2 Schritte am Anfang
        if(mathMove%8 == 0 && isPathClear(_figure, _oldIndex, _newIndex, 8)){
            return true;
        }
        else{
            return false;
        }    
    }      
    
    if(_figure == -6){      //Schwarzer Bauer
        
    }       

    if(_figure == 5){
        
    } 
    
    if(_figure == -5){
        
    }
    
    if(_figure == 4 ){
        
    } 
    
    if(_figure == -4){
        
    }
    
    if(_figure == 3){
        
    }
    
    if(_figure == -3){
        
    }
    
    if(_figure == 2){
        
    } 
    
    if(_figure == -2){
        
    }
    
    if(_figure == 1){
        
    } 
    
    if(_figure == -1){
        
    }
    
    
    
    
    //Speichern
    Moves.push("");  //~ 100k Gas pro Zug
    
    return true;
    
}

}
    
