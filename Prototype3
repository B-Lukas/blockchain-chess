pragma solidity ^0.4.2;

import "./Ownable.sol";
contract Prototyp2 is Ownable{

    //TODO: function Wetteinsatz

    //Hardgecodete Walletadressen, da mehrere User irrelevant
    address contractAddress = 0x1a1B4e3201DE6a1352602E0a1eE0fC9431866891;           //Lukas MetaMask Adresse bzw. MetaMask Adresse des SmartContracts
    
    uint[][] zuege;
    
    function addToGames(uint[] websiteMoves) onlyOwner public  {
            
            //der aktuelle Spielzug wird dem moves array hinzugefÃ¼gt
            //moves.push(Move(_gameId, _fromX, _fromY, _toX, _toY));                  //cost ~120k Gas :/
            
            zuege.push(websiteMoves);
        
            /*Andere Varriante unten dran, teuerer!
            
            testarray.push(_fromX);                      
            testarray.push(_fromY);
            testarray.push(_toX);                                                   //cost ~160k Gas :(   -> 40k pro push
            testarray.push(_toY);
            
            //Andere Varriante Ende */
    }
    

    
    //Function gibt alle Moves eines Spiels(_gameId) wieder
     function getMoves(uint _gameId) onlyOwner external view returns(uint[]) {      //sollte kein Gas kosten, da view function + called external "(Cost only applies when called by a contract)"
         
        uint[] memory result = new uint[]((zuege[_gameId].length));            // ~ 20k gas Price per move
            
                    result = zuege[_gameId];
                
        
        return result;    
        
        //-> Ein Zug ist immer in 4 Werten dargestellt!
    }
    


}
    //TODO: (Replay, Saves ?)
